c++ program to do a breadth first traversal of a binary tree using standard template library

#include<iostream> // c++ header file for standard input and output
#include<stdlib.h> // header file for allocating memory dynamically
#include<stack> // c++ header file for standard tremplate library
  using namespace std;
  struct node
  {
  int data;
  struct node* left;
  struct node* right;
  }; 
  struct node* newnode(int data)
  {
  struct node* node=(struct node*)malloc(sizeof(struct node));
  node->data=data;
  node->left=NULL;
  node->right=NULL;
  return(node);
  }
  void levelorder(struct node* node)
  {
    queue<struct node* node>q; //creating a queue for pushing the nodes one by one in fifo fashion
      if(node==NULL) // base condition 
      return;
       struct node* temp=node;
      while(temp)
      {
        printf("%d\n",temp->data); // print the root first
         if(temp->left)
         q.push(temp->left); // and then  push the nodes into the queue first and print
          if(temp->right)
           q.push(temp->right); // push the right nodes next and pop them out from the queue
           temp=q.pop();
       }
       }
